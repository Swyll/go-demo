// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.0
// source: acount.proto

package __

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Acount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcountID  string `protobuf:"bytes,1,opt,name=AcountID,proto3" json:"AcountID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	EmailAddr string `protobuf:"bytes,3,opt,name=EmailAddr,proto3" json:"EmailAddr,omitempty"`
	Age       int64  `protobuf:"varint,4,opt,name=Age,proto3" json:"Age,omitempty"`
}

func (x *Acount) Reset() {
	*x = Acount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acount) ProtoMessage() {}

func (x *Acount) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acount.ProtoReflect.Descriptor instead.
func (*Acount) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{0}
}

func (x *Acount) GetAcountID() string {
	if x != nil {
		return x.AcountID
	}
	return ""
}

func (x *Acount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Acount) GetEmailAddr() string {
	if x != nil {
		return x.EmailAddr
	}
	return ""
}

func (x *Acount) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteReq) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResp) Reset() {
	*x = DeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp) ProtoMessage() {}

func (x *DeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp.ProtoReflect.Descriptor instead.
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{2}
}

type AddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acount *Acount `protobuf:"bytes,1,opt,name=Acount,proto3" json:"Acount,omitempty"`
}

func (x *AddReq) Reset() {
	*x = AddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReq) ProtoMessage() {}

func (x *AddReq) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReq.ProtoReflect.Descriptor instead.
func (*AddReq) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{3}
}

func (x *AddReq) GetAcount() *Acount {
	if x != nil {
		return x.Acount
	}
	return nil
}

type AddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddResp) Reset() {
	*x = AddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResp) ProtoMessage() {}

func (x *AddResp) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResp.ProtoReflect.Descriptor instead.
func (*AddResp) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{4}
}

type Queryreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcountID string `protobuf:"bytes,1,opt,name=AcountID,proto3" json:"AcountID,omitempty"`
	Limit    int64  `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset   int64  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *Queryreq) Reset() {
	*x = Queryreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queryreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queryreq) ProtoMessage() {}

func (x *Queryreq) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queryreq.ProtoReflect.Descriptor instead.
func (*Queryreq) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{5}
}

func (x *Queryreq) GetAcountID() string {
	if x != nil {
		return x.AcountID
	}
	return ""
}

func (x *Queryreq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Queryreq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type QueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acounts []*Acount `protobuf:"bytes,1,rep,name=Acounts,proto3" json:"Acounts,omitempty"`
}

func (x *QueryResp) Reset() {
	*x = QueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acount_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResp) ProtoMessage() {}

func (x *QueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_acount_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResp.ProtoReflect.Descriptor instead.
func (*QueryResp) Descriptor() ([]byte, []int) {
	return file_acount_proto_rawDescGZIP(), []int{6}
}

func (x *QueryResp) GetAcounts() []*Acount {
	if x != nil {
		return x.Acounts
	}
	return nil
}

var File_acount_proto protoreflect.FileDescriptor

var file_acount_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x06, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x67, 0x65,
	0x22, 0x1b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x0c, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x06, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x09, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x72, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x35,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x07, 0x41,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x41, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x32, 0xaa, 0x01, 0x0a, 0x09, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x61, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x61, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x61, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x72, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_acount_proto_rawDescOnce sync.Once
	file_acount_proto_rawDescData = file_acount_proto_rawDesc
)

func file_acount_proto_rawDescGZIP() []byte {
	file_acount_proto_rawDescOnce.Do(func() {
		file_acount_proto_rawDescData = protoimpl.X.CompressGZIP(file_acount_proto_rawDescData)
	})
	return file_acount_proto_rawDescData
}

var file_acount_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_acount_proto_goTypes = []interface{}{
	(*Acount)(nil),     // 0: acount.Acount
	(*DeleteReq)(nil),  // 1: acount.DeleteReq
	(*DeleteResp)(nil), // 2: acount.DeleteResp
	(*AddReq)(nil),     // 3: acount.AddReq
	(*AddResp)(nil),    // 4: acount.AddResp
	(*Queryreq)(nil),   // 5: acount.Queryreq
	(*QueryResp)(nil),  // 6: acount.QueryResp
}
var file_acount_proto_depIdxs = []int32{
	0, // 0: acount.AddReq.Acount:type_name -> acount.Acount
	0, // 1: acount.QueryResp.Acounts:type_name -> acount.Acount
	1, // 2: acount.AcountSer.DeleteAcount:input_type -> acount.DeleteReq
	3, // 3: acount.AcountSer.AddAcount:input_type -> acount.AddReq
	5, // 4: acount.AcountSer.QueryAcount:input_type -> acount.Queryreq
	2, // 5: acount.AcountSer.DeleteAcount:output_type -> acount.DeleteResp
	4, // 6: acount.AcountSer.AddAcount:output_type -> acount.AddResp
	6, // 7: acount.AcountSer.QueryAcount:output_type -> acount.QueryResp
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_acount_proto_init() }
func file_acount_proto_init() {
	if File_acount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_acount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queryreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acount_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acount_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_acount_proto_goTypes,
		DependencyIndexes: file_acount_proto_depIdxs,
		MessageInfos:      file_acount_proto_msgTypes,
	}.Build()
	File_acount_proto = out.File
	file_acount_proto_rawDesc = nil
	file_acount_proto_goTypes = nil
	file_acount_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AcountSerClient is the client API for AcountSer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AcountSerClient interface {
	DeleteAcount(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error)
	AddAcount(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	QueryAcount(ctx context.Context, in *Queryreq, opts ...grpc.CallOption) (*QueryResp, error)
}

type acountSerClient struct {
	cc grpc.ClientConnInterface
}

func NewAcountSerClient(cc grpc.ClientConnInterface) AcountSerClient {
	return &acountSerClient{cc}
}

func (c *acountSerClient) DeleteAcount(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error) {
	out := new(DeleteResp)
	err := c.cc.Invoke(ctx, "/acount.AcountSer/DeleteAcount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *acountSerClient) AddAcount(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	out := new(AddResp)
	err := c.cc.Invoke(ctx, "/acount.AcountSer/AddAcount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *acountSerClient) QueryAcount(ctx context.Context, in *Queryreq, opts ...grpc.CallOption) (*QueryResp, error) {
	out := new(QueryResp)
	err := c.cc.Invoke(ctx, "/acount.AcountSer/QueryAcount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AcountSerServer is the server API for AcountSer service.
type AcountSerServer interface {
	DeleteAcount(context.Context, *DeleteReq) (*DeleteResp, error)
	AddAcount(context.Context, *AddReq) (*AddResp, error)
	QueryAcount(context.Context, *Queryreq) (*QueryResp, error)
}

// UnimplementedAcountSerServer can be embedded to have forward compatible implementations.
type UnimplementedAcountSerServer struct {
}

func (*UnimplementedAcountSerServer) DeleteAcount(context.Context, *DeleteReq) (*DeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAcount not implemented")
}
func (*UnimplementedAcountSerServer) AddAcount(context.Context, *AddReq) (*AddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAcount not implemented")
}
func (*UnimplementedAcountSerServer) QueryAcount(context.Context, *Queryreq) (*QueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAcount not implemented")
}

func RegisterAcountSerServer(s *grpc.Server, srv AcountSerServer) {
	s.RegisterService(&_AcountSer_serviceDesc, srv)
}

func _AcountSer_DeleteAcount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcountSerServer).DeleteAcount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/acount.AcountSer/DeleteAcount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcountSerServer).DeleteAcount(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AcountSer_AddAcount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcountSerServer).AddAcount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/acount.AcountSer/AddAcount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcountSerServer).AddAcount(ctx, req.(*AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AcountSer_QueryAcount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Queryreq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcountSerServer).QueryAcount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/acount.AcountSer/QueryAcount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcountSerServer).QueryAcount(ctx, req.(*Queryreq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AcountSer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "acount.AcountSer",
	HandlerType: (*AcountSerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteAcount",
			Handler:    _AcountSer_DeleteAcount_Handler,
		},
		{
			MethodName: "AddAcount",
			Handler:    _AcountSer_AddAcount_Handler,
		},
		{
			MethodName: "QueryAcount",
			Handler:    _AcountSer_QueryAcount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "acount.proto",
}
